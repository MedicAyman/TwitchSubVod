{"version":3,"sources":["globalStyles.ts","services/api.ts","pages/Home/styles.ts","components/VodModal/styles.ts","components/VodModal/index.tsx","components/VodGallery/styles.ts","components/VodGallery/index.tsx","pages/Home/index.tsx","App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","api","axios","create","baseURL","process","headers","Accept","Container","styled","div","VodModal","videoUrl","url","controls","width","height","play","keyframes","Image","figure","props","css","animated","VodGallery","data","useState","vodUrl","setVodUrl","map","result","num","splitString","preview","large","split","dataUrl","key","_id","type","onClick","broadcast_id","window","scrollTo","behavior","top","animated_preview_url","title","views","toString","slice","Home","username","setUsername","usernameId","setUsernameId","twitchData","setTwitchData","onSubmit","event","preventDefault","name","onChange","target","value","placeholder","get","then","response","users","err","console","log","size","videos","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0wBAEA,IAmCeA,EAnCKC,YAAH,K,uBCQFC,E,OARHC,EAAMC,OAAO,CACvBC,QAASC,+BACTC,QAAS,CACPC,OAAQ,mCACR,YAAaF,oC,40BCJV,IAAMG,EAAYC,IAAOC,IAAV,K,whBCAf,IAAMF,EAAYC,IAAOC,IAAV,KCWPC,EARE,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAClB,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAaC,IAAKD,EAAUE,UAAQ,EAACC,MAAM,OAAOC,OAAO,W,s2DCDxD,IAAMR,EAAYC,IAAOC,IAAV,KAuDhBO,EAAOC,YAAH,KAMGC,EAAQV,IAAOW,OAAV,KACd,SAACC,GAAD,OACAA,EAAMR,KACNS,YADA,IAEoBD,EAAMR,QAgBxB,SAACQ,GAAD,OACAA,EAAME,SACFD,YADJ,IAEwBD,EAAME,UAE1BD,YAJJ,IAKwBD,EAAMR,OAGnBI,GC7BFO,EAjDI,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,KAAgB,EACRC,mBAAS,IADD,mBAC7BC,EAD6B,KACrBC,EADqB,KAGpC,OACE,oCACGD,GAAU,kBAAC,EAAD,CAAUf,SAAUe,IAE/B,kBAAC,EAAD,KACGF,EAAKI,KAAI,SAACC,GACT,IAAsBC,EAUhBC,EAAcF,EAAOG,QAAQC,MAAMC,MAAM,KAAK,GAEhDC,EAAO,yEAAqEJ,EAArE,2BAEX,OACE,yBAAKK,IAAKP,EAAOQ,KACf,4BACEC,KAAK,SACLC,QAAS,WACPZ,EAAkC,IAAxBE,EAAOW,aAAqBL,EAAUN,EAAOjB,KACvD6B,OAAOC,SAAS,CAAEC,SAAU,SAAUC,IAAK,MAG7C,6BACE,kBAAC1B,EAAD,CACEN,IAAKiB,EAAOG,QAAQC,MACpBX,SAAUO,EAAOgB,wBAGrB,gCAAShB,EAAOiB,OAChB,sCA9BgBhB,EA8BQD,EAAOkB,OA7BzB,KAAQjB,EAAM,KACdA,EAAM,KAAMkB,WAAWC,MAAM,EAAG,GAAK,IACpCnB,EAAM,KACPA,EAAM,KAASkB,WAAWC,MAAM,EAAG,GAAK,IAEzCnB,WC4CNoB,EArDQ,WAAO,IAAD,EACKzB,mBAAS,IADd,mBACpB0B,EADoB,KACVC,EADU,OAES3B,mBAAS,IAFlB,mBAEpB4B,EAFoB,KAERC,EAFQ,OAGS7B,qBAHT,mBAGpB8B,EAHoB,KAGRC,EAHQ,KAuB3B,OACE,kBAACjD,EAAD,KACE,8CACA,0BACEkD,SAAU,SAACC,GACTA,EAAMC,mBAGR,2BACErB,KAAK,OACLsB,KAAK,WACLC,SAAU,SAACH,GAAD,OAAWN,EAAYM,EAAMI,OAAOC,QAC9CA,MAAOZ,EACPa,YAAY,sBAEd,4BAAQ1B,KAAK,SAASC,QAjCP,WACnB,IACEvC,EAAIiE,IAAJ,sBAAuBd,IAAYe,MAAK,SAACC,GACvCnE,EACGiE,IADH,mBACmBE,EAAS3C,KAAK4C,MAAM,GAAG/B,IAD1C,sBAEG6B,MAAK,SAACC,GACLX,EAAcW,EAAS3C,SAG3B8B,EAAca,EAAS3C,KAAK4C,MAAM,GAAG/B,QAEvC,MAAOgC,GACPC,QAAQC,IAAIF,IAGbhB,GAAcE,IAAee,QAAQC,IAAIlB,EAAYE,KAmBhD,kBAAC,IAAD,CAAUiB,KAAM,KADlB,WAMDjB,GACC,oCACE,kBAAC,EAAD,CAAY/B,KAAM+B,EAAWkB,YC1DxBC,MATf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCJNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.7579c704.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --purple: #9147ff;\n    --background: #181a1b;\n    --light-background: #323232;\n    --text: #f1f1f1;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n\n  body {\n  padding: 0rem;\n  margin: 0rem;\n  font-family: 'Roboto', sans-serif;\n  color: var(--text);\n  font-weight: 400;\n  background-color: var(--background);\n  }\n\n  a {\n    text-decoration: none;\n    color: var(purple);\n  }\n\n  input, button {\n    border: 0rem;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n\nexport default GlobalStyle;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  headers: {\n    Accept: 'application/vnd.twitchtv.v5+json',\n    'Client-Id': process.env.REACT_APP_TWITCH_TOKEN,\n  },\n});\n\nexport default api;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding: 0 2rem;\n\n  form {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n  }\n\n  input {\n    background: var(--light-background);\n    height: 2rem;\n    width: 20rem;\n    padding: 0;\n    color: var(--text);\n    text-align: center;\n    margin-bottom: 0.5rem;\n  }\n\n  button[type='submit'] {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--purple);\n    height: 2rem;\n    width: 20rem;\n    border: 2px solid var(--purple);\n    color: var(--text);\n\n    & svg {\n      margin-right: 0.5rem;\n    }\n  }\n\n  a {\n    margin-top: 0.5rem;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-top: 2rem;\n  position: relative;\n  width: 60rem;\n  height: 33.75rem;\n\n  .react-player {\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    iframe {\n      height: 100vh;\n    }\n  }\n\n  @media (max-width: 960px) {\n    width: 48rem;\n    height: 27rem;\n  }\n\n  @media (max-width: 768px) {\n    width: 30rem;\n    height: 16.875rem;\n  }\n\n  @media (max-width: 480px) {\n    width: 22.5rem;\n    height: 12.65625rem;\n  }\n`;\n","import React from 'react';\nimport ReactPlayer from 'react-player';\n\nimport { Container } from './styles';\n\nconst VodModal = ({ videoUrl }: any) => {\n  return (\n    <Container>\n      <ReactPlayer url={videoUrl} controls width=\"100%\" height=\"100%\" />\n    </Container>\n  );\n};\n\nexport default VodModal;\n","import styled, { css, keyframes } from 'styled-components';\n\ninterface AnimatedProps {\n  url: string;\n  animated: any;\n}\n\nexport const Container = styled.div`\n  max-width: 60rem;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n\n  div {\n    max-width: 19rem;\n    margin: 0.5rem;\n    display: flex;\n    flex-direction: column;\n    width: 19rem;\n\n    button {\n      width: 19rem;\n      padding: 0;\n      display: flex;\n      flex-direction: column;\n      background-color: transparent;\n      color: var(--text);\n      font-family: 'Roboto', sans-serif;\n\n      &:hover {\n        color: var(--purple);\n      }\n\n      div {\n        max-height: 10.6875rem;\n        margin: 0;\n\n        &:hover {\n          background: var(--purple);\n        }\n      }\n    }\n\n    strong {\n      word-wrap: break-word;\n      margin: 0.2rem 0;\n      font-size: 0.9rem;\n      font-weight: bold;\n    }\n\n    p {\n      margin: 0;\n      font-size: 0.75rem;\n      font-weight: normal;\n    }\n  }\n\n  div & {\n    padding: 1rem 0;\n  }\n`;\n\nconst play = keyframes`\n    100% {\n        background-position: 0 -1800px;\n      }\n`;\n\nexport const Image = styled.figure<AnimatedProps>`\n  ${(props) =>\n    props.url &&\n    css`\n      background: url(${props.url}) no-repeat top center;\n    `}\n  background-size: contain;\n  margin: 0;\n  display: flex;\n  height: 10.6875rem;\n  width: 19rem;\n  object-fit: contain;\n\n  transition: transform 0.075s ease;\n\n  &:hover {\n    transform: translateX(0.5rem) translateY(-0.5rem);\n    max-height: 10.6875rem;\n    object-fit: cover;\n\n    ${(props) =>\n      props.animated\n        ? css`\n            background: url(${props.animated});\n          `\n        : css`\n            background: url(${props.url});\n          `}\n\n    animation: ${play} 7s steps(10) infinite;\n  }\n`;\n","import React, { useState } from 'react';\n\nimport VodModal from '../VodModal';\n\nimport { Container, Image } from './styles';\n\ninterface ResultProps {\n  _id: string;\n  animated_preview_url: string;\n  preview: {\n    large: string;\n  };\n  broadcast_id: number;\n  title: string;\n  views: number;\n  url: string;\n  length: number; //in seconds\n  game: string;\n}\nconst VodGallery = ({ data }: any) => {\n  const [vodUrl, setVodUrl] = useState(''); //use useContext later to clear this when we search again\n\n  return (\n    <>\n      {vodUrl && <VodModal videoUrl={vodUrl} />}\n\n      <Container>\n        {data.map((result: ResultProps) => {\n          const formatNumber = (num: number) => {\n            if (num > 1000 && num < 1000000) {\n              return (num / 1000).toString().slice(0, 3) + 'K';\n            } else if (num > 1000000) {\n              return (num / 1000000).toString().slice(0, 3) + 'M';\n            } else {\n              return num;\n            }\n          };\n\n          const splitString = result.preview.large.split('/')[5];\n\n          let dataUrl = `https://twitch-cors.herokuapp.com/https://vod-secure.twitch.tv/${splitString}/chunked/index-dvr.m3u8`;\n\n          return (\n            <div key={result._id}>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setVodUrl(result.broadcast_id !== 1 ? dataUrl : result.url);\n                  window.scrollTo({ behavior: 'smooth', top: 0 });\n                }}\n              >\n                <div>\n                  <Image\n                    url={result.preview.large}\n                    animated={result.animated_preview_url}\n                  />\n                </div>\n                <strong>{result.title}</strong>\n                <p>Views: {formatNumber(result.views)}</p>\n              </button>\n            </div>\n          );\n        })}\n      </Container>\n    </>\n  );\n};\n\nexport default VodGallery;\n","import React, { useState } from 'react';\n\nimport { FiSearch } from 'react-icons/fi';\n\nimport api from '../../services/api';\n\nimport { Container } from './styles';\nimport VodGallery from '../../components/VodGallery';\n\ninterface TwitchVideoProps {\n  videos: Array<{\n    broadcast_id: number;\n    channel: {\n      display_name: string;\n      description: string;\n      followers: number;\n      logo: string;\n      video_banner: string;\n    };\n    thumbnails: {\n      large: Array<{ url: string }>;\n    };\n  }>;\n}\n\nconst Home: React.FC = () => {\n  const [username, setUsername] = useState('');\n  const [usernameId, setUsernameId] = useState('');\n  const [twitchData, setTwitchData] = useState<TwitchVideoProps>();\n\n  const handleSubmit = () => {\n    try {\n      api.get(`users?login=${username}`).then((response) => {\n        api\n          .get(`channels/${response.data.users[0]._id}/videos?limit=100`)\n          .then((response) => {\n            setTwitchData(response.data);\n          });\n\n        setUsernameId(response.data.users[0]._id);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n\n    (usernameId || twitchData) && console.log(usernameId, twitchData);\n  };\n\n  return (\n    <Container>\n      <h1>Twitch Sub Vod</h1>\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n        }}\n      >\n        <input\n          type=\"text\"\n          name=\"username\"\n          onChange={(event) => setUsername(event.target.value)}\n          value={username}\n          placeholder=\"Streamer Username\"\n        />\n        <button type=\"submit\" onClick={handleSubmit}>\n          <FiSearch size={14} />\n          Search\n        </button>\n      </form>\n\n      {twitchData && (\n        <>\n          <VodGallery data={twitchData.videos} />\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport GlobalStyle from './globalStyles';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Home />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}